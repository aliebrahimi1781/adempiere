<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">


        <!-- Turn on AspectJ @Configurable support
        <context:spring-configured />

        <context:annotation-config />
         -->
        
        <tx:annotation-driven />


        <!-- Turn on @Autowired, @PostConstruct etc support
        <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
        <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />
 -->
        <context:property-placeholder location="classpath:database.properties" />

        <bean id="dataSource"
                class="org.springframework.jdbc.datasource.DriverManagerDataSource">
                <property name="driverClassName" value="${database.driverClassName}" />
                <property name="url" value="${database.url}" />
                <property name="username" value="${database.username}" />
                <property name="password" value="${database.password}" />
        </bean>

        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
                <property name="entityManagerFactory" ref="entityManagerFactory" />
        </bean>

        <bean id="entityManagerFactory"
                class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
                <property name="persistenceUnitName" value="ADManager" />
                <property name="dataSource" ref="dataSource" />
                <property name="jpaVendorAdapter">
                        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                                <property name="databasePlatform" value="${database.platform}" />
                                <property name="showSql" value="${database.showSql}" />
                                <property name="generateDdl" value="${database.generateDdl}" />
                        </bean>
                </property>
                <property name="jpaProperties">
                        <props>
                                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy
                                </prop>
                        </props>
                </property>
        </bean>
        
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
        
        
        <!-- 
        Example on how to use the HB4GWTRPCServiceExporter which combines hibernate4gwt's (now gilead) 
        HibernateBeanManager with a GWTRPCServiceExporter. This servlet loads an in-memory
        <bean id="BaseHibernate4GWTExporter" abstract="true" 
                class="org.gwtwidgets.server.spring.hb4gwt.HB4GWTRPCServiceExporter"/> 
        <bean id="PojoStore" 
                class="net.sf.gilead.core.store.stateless.StatelessProxyStore"/> 
        <bean id="HibernateUtil" 
                class="net.sf.gilead.core.hibernate.HibernateUtil"> 
                <property name="entityManagerFactory" ref="entityManagerFactory"/> 
        </bean> 
    
        <bean id="HibernateBeanManager" 
                class="net.sf.gilead.core.PersistentBeanManager"> 
                <property name="proxyStore" ref="PojoStore" /> 
                <property name="persistenceUtil" ref="HibernateUtil"/> 
        </bean> 
        --> 
        
</beans>